---

# Set to 'absent' to undeploy Fragnet Search
fs_state: present

# The search flavour to deploy - this is either
# 'search' for the core Search container, or
# 'ui' for the Fragnet Search UI.
fs_flavour: search
# The flavour version.
# This should be a valid version for the selected flavour, i.e. a version
# for the search image or one that is valid for the ui image.
fs_image_tag: 0.3.2

# Realm
fs_realm: squonk
fs_realm_public_key: SetMe

# Main application variables
fs_hostname: fragnet.informaticsmatters.com
fs_cert_issuer: production
fs_keycloak_client_id: fragnet-search

# Route and (ACME) Certificate creation
fs_enable_route: yes
fs_enable_acme: no

# The namespace the infrastructure is deployed to.
# This will be where we can find Keycloak.
ir_namespace: im-infra

# Provided by our chosen AWX/Tower Keycloak credentials
# (keycloak credential type)...

keycloak_server_url: "{{ lookup('env', 'KEYCLOAK_SERVER_URL') }}"
keycloak_admin: "{{ lookup('env', 'KEYCLOAK_ADMIN') }}"
keycloak_admin_password: "{{ lookup('env', 'KEYCLOAK_ADMIN_PASSWORD') }}"
keycloak_public_key: "{{ lookup('env', 'KEYCLOAK_PUBLIC_KEY') }}"
keycloak_secret: "{{ lookup('env', 'KEYCLOAK_SECRET') }}"
keycloak_realm: "{{ lookup('env', 'KEYCLOAK_REALM') }}"

# The namespace and service name of the graph instance
# We use this to construct the bolt service name
# and use the namespace to collect the graph credentials
# (which are stored in a secret in the namespace).
#
# For most deployments this does not have to be set
# as it is expected that the graph database in in the
# 'graph' namespace with bolt service on 'graph.graph.svc'.
graph_namespace: graph
graph_service: graph
