---

# Common playbook preparation.

# Expose ansible version
- name: Debug
  debug:
    var: ansible_version.full

# Basic pre-playbook prerequisites.
# We need the openshift/kubernetes module amongst other things...

- name: Get built-in Python packages
  command: pip freeze
  register: freeze_result

- name: Collect built-in Python packages
  set_fact:
    builtin_python_packages: "{{ builtin_python_packages|default([]) + [item.split('==')[0]] }}"
  loop: "{{ freeze_result.stdout_lines }}"

- name: Display built-in Python packages
  debug:
    var: builtin_python_packages
    verbosity: 3

- name: Install prerequisite Python modules
  pip:
    name: "{{ item.name }}"
    version: "{{ item.version }}"
    extra_args: --user
  loop:
  - { name: 'jmespath', version: '0.9.4' }
  - { name: 'kubernetes', version: '10.0.1' }
  - { name: 'openshift', version: '0.10.0' }
  when: item.name not in builtin_python_packages

# Install required Ansible Galaxy modules

- name: Install Ansible Galaxy modules
  command: ansible-galaxy install -r infrastructure-realm-requirements.yaml
  register: ag_result
  changed_when: "'downloading role' in ag_result.stdout"

# Kubernetes credentials ------------------------------------------------------

# We don't use the Kubernetes credentials directly,
# but we load them into variables here from their
# expected environment variables so that we can assert they've been set.
#
# If we're using OpenShift credentials these environment variables
# will not be set and we will therefore rely on them being set
# from the 'login.yaml' play.

- name: Set initial authentication facts
  set_fact:
    k8s_auth_host: "{{ lookup('env', 'K8S_AUTH_HOST') }}"
    k8s_auth_api_key: "{{ lookup('env', 'K8S_AUTH_API_KEY') }}"
