---

# Set to 'absent' to undeploy Fragnet Search
fs_state: present

# The fragnet 'flavour' to deploy - this is one of: -
#   depict
#   search
#   ui
# The UI is not a public container image
# so you'll need credentials (a pull-secret) to deploy it.
fs_flavour: search
# The flavour's version.
# This should be a valid version for the selected flavour, i.e. a version
# for the search image, the depict image or the ui image.
fs_image_tag: 0.5.6
# The namespace to deploy to
fs_namespace: fragnet-search

# If using Google Analytics set the ID here.
# This will be placed in the UI's config map.
# Otherwise leave this blank.
fs_ui_google_analytics_id: ''

# Realm
fs_realm: squonk
# Alter the realm? i.e. create the client ID and roles?
# But default 'no'. Set to 'yes' if you need to create the
# client ID and the application roles. This is also taken
# into account when the app is removed. If fs_alter_realm is 'yes'
# when you undeploy, the client ID and roles are removed.
fs_alter_realm: no
fs_keycloak_client_id: fragnet-search

# Locations (hostnames and paths) for the various services
fs_location:
  depict:
    hostname: squonk.it
    path: /fragnet-depict-api
  search:
    hostname: squonk.it
    path: /fragnet-search-api
  ui:
    hostname: squonk.it
    path: /fragnet-search-ui

# The namespace the infrastructure is deployed to.
# This will be where we can find Keycloak.
ir_namespace: im-infra

# Provided by our chosen AWX/Tower Keycloak credentials
# (keycloak credential type)...

keycloak_server_url: "{{ lookup('env', 'KEYCLOAK_SERVER_URL') }}"
keycloak_admin: "{{ lookup('env', 'KEYCLOAK_ADMIN') }}"
keycloak_admin_password: "{{ lookup('env', 'KEYCLOAK_ADMIN_PASSWORD') }}"
keycloak_public_key: "{{ lookup('env', 'KEYCLOAK_PUBLIC_KEY') }}"
keycloak_secret: "{{ lookup('env', 'KEYCLOAK_SECRET') }}"
keycloak_realm: "{{ lookup('env', 'KEYCLOAK_REALM') }}"

# The namespace and service name of the graph instance
# We use this to construct the bolt service name
# and use the namespace to collect the graph credentials
# (which are stored in a secret in the namespace).
#
# For most deployments this does not have to be set
# as it is expected that the graph database in in the
# 'graph' namespace with bolt service on 'graph.graph.svc'.
graph_namespace: graph
graph_service: graph
