---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: fragnet-ui
  namespace: {{ fs_namespace }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: fragnet
  template:
    metadata:
      labels:
        name: fragnet
    spec:
      serviceAccountName: {{ fs_sa }}

      # Avoid 'worker' nodes
      # and prefer 'application' nodes
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: informaticsmatters.com/purpose-application
                operator: Exists

      imagePullSecrets:
      - name: ui-pull-secret

      containers:
      - name: fragnet-ui
        image: {{ fs_flavour_ui_image }}:{{ fs_image_tag }}
{% if fs_image_tag in ['latest', 'stable'] %}
        imagePullPolicy: Always
{% else %}
        imagePullPolicy: IfNotPresent
{% endif %}
        terminationMessagePolicy: FallbackToLogsOnError
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: LOG_ROOT
          value: /logs
{% if fs_image_tag in ['latest', 'stable'] %}
        # CICD_TRIGGER_ID is variable whose value is used to force
        # a redeployment of the underlying pods. This is used in
        # situations where the origin image's tag may not have changed
        # (e.g. it's 'latest' or 'stable') but a new build is expected to
        # be available. Without changing something in the Deployment spec
        # a roll-out will not occur if the tag has not changed.
        - name: CICD_TRIGGER_ID
          value: '{{ ansible_date_time.iso8601_micro }}'
{% endif %}
        resources:
          limits:
{% if fs_ui_cpu_limit %}
            cpu: {{ fs_ui_cpu_limit }}
{% endif %}
{% if fs_ui_mem_limit %}
            memory: {{ fs_ui_mem_limit }}
{% endif %}
          requests:
            cpu: {{ fs_ui_cpu_request }}
            memory: {{ fs_ui_mem_request }}
        volumeMounts:
        - mountPath: /usr/local/tomcat/webapps/fragnet-search/META-INF/context.xml
          name: fs-config-map-common
          subPath: context.xml
          readOnly: true
        - mountPath: /usr/local/tomcat/webapps/fragnet-search/WEB-INF/keycloak.json
          name: fs-config-map-common
          subPath: keycloak.json
          readOnly: true
        - mountPath: /usr/local/tomcat/conf/logging.properties
          name: fs-config-map-common
          subPath: logging.properties
        - mountPath: /usr/local/tomcat/webapps/fragnet-search/WEB-INF/web.xml
          name: fs-config-map-common
          subPath: web.xml
          readOnly: true
        - mountPath: /usr/local/tomcat/conf/server.xml
          name: fs-config-map-common
          subPath: server.xml
        - mountPath: /usr/local/tomcat/webapps/ROOT/config.json
          name: fs-config-map-ui
          subPath: config.json
        - mountPath: /usr/local/tomcat/webapps/ROOT/keycloak.json
          name: fs-config-map-ui
          subPath: keycloak.json
      volumes:
      - name: fs-config-map-common
        configMap:
          name: common
      - name: fs-config-map-ui
        configMap:
          name: ui
