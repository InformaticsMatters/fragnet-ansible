---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: fragnet-search
  namespace: {{ fs_namespace }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: fragnet
  template:
    metadata:
      labels:
        name: fragnet
    spec:
      serviceAccountName: {{ fs_sa }}

      # Avoid 'worker' nodes
      # and prefer 'application' nodes
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: informaticsmatters.com/purpose
                operator: NotIn
                values:
                - worker
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: informaticsmatters.com/purpose
                operator: In
                values:
                - application

{% if fs_dockerhub_pullsecret %}
      imagePullSecrets:
      - name: dockerhub-pull-secret
{% endif %}

      containers:
      - name: fragnet-search
        image: {{ fs_flavour_search_image }}:{{ fs_image_tag }}
{% if fs_image_tag in ['latest', 'stable'] %}
        imagePullPolicy: Always
{% else %}
        imagePullPolicy: IfNotPresent
{% endif %}
        terminationMessagePolicy: FallbackToLogsOnError
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: NEO4J_SERVER
          value: '{{ graph_service }}.{{ graph_namespace }}.svc'
        - name: NEO4J_USER
          value: {{ graph_user_fact|default('neo4j', true) }}
        - name: NEO4J_PASSWORD
          value: {{ graph_password_fact|default('neo4j', true) }}
        - name: LOG_ROOT
          value: /logs
        resources:
          limits:
{% if fs_search_cpu_limit %}
            cpu: {{ fs_search_cpu_limit }}
{% endif %}
{% if fs_search_mem_limit %}
            memory: {{ fs_search_mem_limit }}
{% endif %}
          requests:
            cpu: {{ fs_search_cpu_request }}
            memory: {{ fs_search_mem_request }}
        volumeMounts:
        - mountPath: /usr/local/tomcat/webapps/fragnet-search/META-INF/context.xml
          name: fs-config-map-common
          subPath: context.xml
          readOnly: true
        - mountPath: /usr/local/tomcat/webapps/fragnet-search/WEB-INF/keycloak.json
          name: fs-config-map-common
          subPath: keycloak.json
          readOnly: true
        - mountPath: /usr/local/tomcat/conf/logging.properties
          name: fs-config-map-common
          subPath: logging.properties
        - mountPath: /usr/local/tomcat/webapps/fragnet-search/WEB-INF/web.xml
          name: fs-config-map-common
          subPath: web.xml
          readOnly: true
        - mountPath: /usr/local/tomcat/conf/server.xml
          name: fs-config-map-common
          subPath: server.xml
      volumes:
      - name: fs-config-map-common
        configMap:
          name: common
